#!/bin/bash
echo "=========================="
echo "       LLVM Builder"
echo "    by Nakada Tokumei"
echo "=========================="

export SRC=$(pwd)
export CLANG_PREFIX=/usr/lib/llvm-20/bin/
export STAGE1=${SRC}/build_stage1
export STAGE2=${SRC}/build_stage2
export SYSROOT=${HOME}/sysroot_m2

function build_llvm_stage1() {
    if [[ ! -d ${STAGE1} ]]; then
        mkdir -p ${STAGE1}
    fi

    cd ${STAGE1}

    cmake -S ${SRC}/llvm -G Ninja                                       \
        -DCMAKE_C_COMPILER=${CLANG_PREFIX}clang                         \
        -DCMAKE_CXX_COMPILER=${CLANG_PREFIX}clang++                     \
        -DCMAKE_INSTALL_PREFIX=${SYSROOT}                               \
        -C ${SRC}/clang/cmake/caches/M-2-stage1.cmake
    
    ninja -j8

    ninja install
}

function build_llvm_stage2() {
    if [[ ! -d ${STAGE2} ]]; then
        mkdir -p ${STAGE2}
    fi

    cd ${STAGE2}

    cmake -S ${SRC}/llvm -G Ninja                                      \
        -DCMAKE_C_COMPILER=${SYSROOT}/bin/clang                         \
        -DCMAKE_CXX_COMPILER=${SYSROOT}/bin/clang++                     \
        -DCMAKE_INSTALL_PREFIX=${SYSROOT}                              \
        -DM2_SYSROOT=${SYSROOT}                                        \
        -C ${SRC}/clang/cmake/caches/M-2-stage2.cmake
    
    ninja -j8

    ninja install
}

# build_llvm_stage1
build_llvm_stage2

# cmake -G Ninja ../llvm                                              \
#     -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra"            \
#     -DLLVM_ENABLE_RUNTIMES="libcxx"                                 \
#     -DCMAKE_C_COMPILER=${CLANG_PREFIX}clang                         \
#     -DCMAKE_CXX_COMPILER=${CLANG_PREFIX}clang++                     \
#     -DLLVM_ENABLE_LLD=ON                                            \
#     -DCMAKE_BUILD_TYPE=Release                                      \
#     -DLLVM_TARGETS_TO_BUILD="X86"                                   \
#     -DLLVM_DEFAULT_TARGET_TRIPLE="x86_64-unknown-m2"                \
#     -DLIBCXX_INSTALL_HEADERS=ON                                     \
#     -DLIBCXX_INSTALL_LIBRARY=OFF                                          

# cmake -G Ninja ../llvm                                              \
#     -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra"            \
#     -DCMAKE_C_COMPILER=${CLANG_PREFIX}clang                         \
#     -DCMAKE_CXX_COMPILER=${CLANG_PREFIX}clang++                     \
#     -DLLVM_ENABLE_LLD=ON                                            \
#     -DCMAKE_BUILD_TYPE=Release                                      \
#     -DLLVM_TARGETS_TO_BUILD="X86"                                   \
#     -DLLVM_DEFAULT_TARGET_TRIPLE="x86_64-unknown-m2"                

# # ninja lld -j8

# # ninja cxx cxxabi -j8

# ninja -j8